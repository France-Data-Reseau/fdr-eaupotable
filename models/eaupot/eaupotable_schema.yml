version: 2

models :
  - name: eaupot_std_canalisations
    description: l'union des canalisations des toutes les sources
    config:
      tags: [ 'translation' ] # 'pii' TODO generate from source__type.sql (and rename it)
      meta:
        type: canalisations
        FDR_ROLE: echange
        fal:
          scripts:
            #- dbt_packages/fdr_appuiscommuns/scripts/publish.py
            - scripts/publish.py
    columns:
      - name: eaupotcan_idCanalisation
        quote: true
        description: description
        tests:
          - unique
          - not_null
      - name: geometrie
        description: description
        tests:
          - not_null
      - name: eaupotcan_materiau
        description: description
        tests:
          - not_null
          - relationships:
              to: ref("eaupot_def_l_canalisations_materiau_v3")
              field: '"Code"'
      - name: eaupotcan_diametreNominal
        quote: true
        description: description
        tests:
          - dbt_utils.accepted_range:
              min_value: 0 # 1 ?
              max_value: 3000
              #where: "apcomsup__HauteurAppui > 0"
      - name: eaupotcan_maitreOuvrage
        quote: true
        description: description
        tests:
          - not_null
      - name: eaupotcan_exploitant
        description: description
        tests:
          - not_null
      - name: eaupotcan_longueur
        quote: true
        description: description
        tests:
          - dbt_utils.accepted_range:
              min_value: 0 # 1 ?
              max_value: 10000
              #where: "apcomsup__HauteurAppui > 0"
      - name: eaupotcan_qualiteGeolocalisation
        quote: true
        tests:
          - not_null
          - relationships:
              to: ref("eaupot_def_l_canalisations_qualiteGeolocalisation_v3")
              field: '"Code"'
      - name: eaupotcan_sourceMateriau
        quote: true
        tests:
          - not_null
          - relationships:
              to: ref("eaupot_def_l_canalisations_source_v3")
              field: '"Type"'
      - name: eaupotcan_sourceDiametreNominal
        quote: true
        tests:
          - not_null
          - relationships:
              to: ref("eaupot_def_l_canalisations_source_v3")
              field: '"Type"'
      - name: eaupotcan_sourceDatePose
        quote: true
        tests:
          - not_null
          - relationships:
              to: ref("eaupot_def_l_canalisations_source_v3")
              field: '"Type"'
      # dateAbandon null si FDR_SOURCE_NOM=canalisations_en_service
      - name: eaupotcan_dateAbandon
        quote: true
        tests:
          - not_null:
              where: "\"FDR_SOURCE_NOM\" = 'canalisations_abandonnees'"
      - name: eaupotcan_sourceDateAbandon
        quote: true
        tests:
          - not_null:
              where: "\"FDR_SOURCE_NOM\" = 'canalisations_abandonnees'"
          - relationships:
              to: ref("eaupot_def_l_canalisations_source_v3")
              field: '"Type"'

  - name: eaupot_def_canalisations_example_stg
    description: description
    config:
      tags: [ 'example' ] # 'pii' TODO generate from source__type.sql (and rename it)
      meta:
        type: canalisations
        FDR_ROLE: source
        FDR_TARGET: test
        fal:
          scripts:
            #- dbt_packages/fdr_appuiscommuns/scripts/publish.py
            - scripts/publish.py

  - name: eaupot_std_reparations
    description: l'union des reparations des toutes les sources
    config:
      tags: [ 'translation' ] # 'pii' TODO generate from source__type.sql (and rename it)
      meta:
        type: reparations
        FDR_ROLE: echange
        fal:
          scripts:
            #- dbt_packages/fdr_appuiscommuns/scripts/publish.py
            - scripts/publish.py

seeds :
  - name: eaupot_def_canalisations_example
    description: "Parsing of a priori (made-up), covering examples of the definition / interface.
      Examples have to be **as representative** of all possible data as possible because they are also the basis of the definition.
      For instance, for a commune INSEE id field, they should also include a non-integer value such as 2A035 (Belvédère-Campomoro).
      Methodology :
      1. copy the first line(s) from the specification document (pour l'instant copié manuellement depuis le Gitbook, à terme pourrait générer ce dernier voire un métamodèle guidant l'outillage)
      2. add line(s) to contain further values for until they are covering for all columns
      3. NB. examples specific to each source type are provided in _source_example along their implementation (for which they are covering)"
    config:
      tags: ["example"] # echantillon, test
      meta:
        type: canalisations
      column_types:
        eaupotcan_materiau: text
        #eaupotcan_maitreOuvrage: text # & exploitant... quand pas de valeur sont lus en int, mais de toutes façons retypés dans _from_csv
        eaupotcan_modeCirculation: text
        eaupotcan_qualiteGeolocalisation: text
        eaupotcan_sourceMateriau: text
        eaupotcan_sourceDiametreNomin: text
        eaupotcan_sourceDatePose: text
        eaupotcan_sourceDateAbandon: text

  - name: eaupot_def_l_canalisations_materiau_v3
    description: liste de valeurs possibles pour le champ
    config:
      tags: ["dictionary"]
      column_types:
        Code: text
        Alias: text
  - name: eaupot_def_l_canalisations_modeCirculation_v3
    description: liste de valeurs possibles pour le champ
    config:
      tags: ["dictionary"]
      column_types:
        Code: text
        Alias: text
  - name: eaupot_def_l_canalisations_qualiteGeolocalisation_v3
    description: liste de valeurs possibles pour le champ
    config:
      tags: ["dictionary"]
      column_types:
        Code: text
        Alias: text
  - name: eaupot_def_l_canalisations_source_v3
    description: liste de valeurs possibles pour le champ
    config:
      tags: ["dictionary"]
      column_types:
        Type: text
        Alias: text

  - name: eaupot_def_reparations_example
    description: "Parsing of a priori (made-up), covering examples of the definition / interface.
    Examples have to be **as representative** of all possible data as possible because they are also the basis of the definition.
    For instance, for a commune INSEE id field, they should also include a non-integer value such as 2A035 (Belvédère-Campomoro).
    Methodology :
    1. copy the first line(s) from the specification document (pour l'instant copié manuellement depuis le Gitbook, à terme pourrait générer ce dernier voire un métamodèle guidant l'outillage)
    2. add line(s) to contain further values for until they are covering for all columns
    3. NB. examples specific to each source type are provided in _source_example along their implementation (for which they are covering)"
    config:
      tags: [ "example" ] # echantillon, test
      meta:
        type: reparations
      column_types:
        eaupotrep_materiau: text
        #eaupotrep_supportInciden: text # quand pas de valeur sont lus en int, mais de toutes façons retypés dans _from_csv
        eaupotrep_qualiteGeolocalisation: text
        eaupotrep_emplacement: text
        eaupotrep_type: text
        eaupotrep_causeProbable: text

  - name: eaupot_def_l_reparations_emplacement_v3
    description: liste de valeurs possibles pour le champ
    config:
      tags: [ "dictionary" ]
      column_types:
        Code: text
        Alias: text
  - name: eaupot_def_l_reparations_type_v3
    description: liste de valeurs possibles pour le champ
    config:
      tags: [ "dictionary" ]
      column_types:
        Code: text
        Alias: text
  - name: eaupot_def_l_reparations_causeProbable_v3
    description: liste de valeurs possibles pour le champ
    config:
      tags: [ "dictionary" ]
      column_types:
        Code: text
        Alias: text